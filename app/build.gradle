/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(8))
  }
}

test {
  testLogging {
    outputs.upToDateWhen {false}
    showStandardStreams = true
    events "failed"
  }
}


jar {
    archiveName = 'sh.jar'

   duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

    manifest {
        attributes 'Main-Class': 'jg.sh.Main'
    }

    from {
      configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
  // Use JUnit Jupiter for testing.
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

  implementation "com.google.guava:guava:32.1.1-jre"
  implementation 'commons-cli:commons-cli:1.5.0'
  implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
  implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
}

application {
    // Define the main class for the application.
    //mainClass = 'jg.sh.SeaHorseInterpreter'
    mainClass = 'jg.sh.IOMain'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
