use system;

func fibSlow(n){
  if(n < 0){
     return -10000;
  }
  elif(n = 0){
     return 0;
  }
  elif((n = 1) || (n = 2)){
     return 1;
  }
  else{
     return fibSlow(n-1) + fibSlow(n-2);
  }
}

func fib(n){
  const arr := [0,1,1];
  system.println("init ARR "+arr);
 
  if(n <= 2){
    return arr[n];
  }
  else {
    var index := 3;
    while(index <= n){
      system.println(" ==> cycle: "+index+" | "+(index - 1)+" | "+(index - 2)+" | ARR: "+arr);
    	arr.add(arr[index - 1] + arr[index - 2]);
    	index += 1;
    }
    
    system.println("ARR: "+arr);
    return arr[n];
  }
}

const value := fib(28);
const valueSlow := fibSlow(28);
system.println("Result: "+value+" | slow "+valueSlow+" | "+(value = valueSlow));

