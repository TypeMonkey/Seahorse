
func fibSlow(n){
  if(n < 0){
     return -10000;
  }
  elif(n == 0){
     return 0;
  }
  elif((n == 1) || (n == 2)){
     return 1;
  }
  else{
     return fibSlow(n-1) + fibSlow(n-2);
  }
}

func fib(n){
  const arr := [0,1,1];
 
  if(n <= 2){
    return arr[n];
  }
  else {
    var index := 3;
    while(index <= n){
    	arr.add(arr[index - 1] + arr[index - 2]);
    	index += 1;
    }
    
    return arr[n];
  }
}

var start := system.now();
const t1 := system.spinOff(func:t1Func(){
  const currFiber := system.currentFiber();
  system.println("*** Fiber 1 START Time: "+(currFiber.startTime() - start));

	const test := fibSlow(25);
  system.println(" - fiber "+currFiber.getID()+": "+test+" | "+currFiber.getStatus());
});
system.println("*** Fiber 1 Creation Time: "+(system.now() - start));

start = system.now();
const t2 := system.spinOff(func:t2Func(){
  const currFiber := system.currentFiber();
  system.println("*** Fiber 2 START Time: "+(currFiber.startTime() - start));

	const test := fibSlow(28);
  system.println(" - fiber "+currFiber.getID()+": "+test+" | "+currFiber.getStatus());
});
system.println("*** Fiber 2 Creation Time: "+(system.now() - start));